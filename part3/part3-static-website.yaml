AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to create an S3 bucket for static website hosting"

Resources:
  LoggingBucket:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "access logs bucket has no other use case"
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub
        - ${BaseName}-logs-${RandomString}
        - BaseName: !Ref "BucketName"
          RandomString:
            !Select [
              2,
              !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]],
            ]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      Tags:
        - Key: workload
          Value: !Ref "TagValue"

  LoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref "LoggingBucket"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "s3:PutObject"
            Condition:
              ArnLike:
                "aws:SourceArn":
                  - !GetAtt
                    - "StaticWebsiteBucket"
                    - "Arn"
            Effect: "Allow"
            Principal:
              Service: "logging.s3.amazonaws.com"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${LoggingBucket}/*"

  StaticWebsiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub
        - ${BaseName}-${RandomString}
        - BaseName: !Ref "BucketName"
          RandomString:
            !Select [
              2,
              !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]],
            ]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: false # Set to false to allow public bucket policies
        IgnorePublicAcls: true
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      LoggingConfiguration:
        DestinationBucketName: !Ref "LoggingBucket"
        LogFilePrefix: "access-logs/"
      Tags:
        - Key: workload
          Value: !Ref "TagValue"

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F16
            reason: "will be replaced as CloudFront OAI will be used"
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:${AWS::Partition}:s3:::${StaticWebsiteBucket}/*"
      Bucket: !Ref "StaticWebsiteBucket"

Parameters:
  BucketName:
    Type: String
    Description: "Name for the S3 bucket (must be globally unique)"
  TagValue:
    Type: String
    Description: "Value to tag the bucket with"

Outputs:
  WebsiteURL:
    Value: !GetAtt
      - StaticWebsiteBucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Sub "https://${StaticWebsiteBucket}.s3-website.${AWS::Region}.amazonaws.com"
    Description: Name of S3 bucket to hold website content
